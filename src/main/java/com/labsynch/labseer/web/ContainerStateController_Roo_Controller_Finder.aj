// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.Container;
import com.labsynch.labseer.domain.ContainerState;
import com.labsynch.labseer.web.ContainerStateController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ContainerStateController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByContainer", "form" }, method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByContainerForm(Model uiModel) {
        uiModel.addAttribute("containers", Container.findAllContainers());
        return "containerstates/findContainerStatesByContainer";
    }
    
    @RequestMapping(params = "find=ByContainer", method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByContainer(@RequestParam("container") Container container, Model uiModel) {
        uiModel.addAttribute("containerstates", ContainerState.findContainerStatesByContainer(container).getResultList());
        return "containerstates/list";
    }
    
    @RequestMapping(params = { "find=ByContainerAndLsKindEqualsAndIgnoredNot", "form" }, method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByContainerAndLsKindEqualsAndIgnoredNotForm(Model uiModel) {
        uiModel.addAttribute("containers", Container.findAllContainers());
        return "containerstates/findContainerStatesByContainerAndLsKindEqualsAndIgnoredNot";
    }
    
    @RequestMapping(params = "find=ByContainerAndLsKindEqualsAndIgnoredNot", method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByContainerAndLsKindEqualsAndIgnoredNot(@RequestParam("container") Container container, @RequestParam("lsKind") String lsKind, @RequestParam(value = "ignored", required = false) boolean ignored, Model uiModel) {
        uiModel.addAttribute("containerstates", ContainerState.findContainerStatesByContainerAndLsKindEqualsAndIgnoredNot(container, lsKind, ignored).getResultList());
        return "containerstates/list";
    }
    
    @RequestMapping(params = { "find=ByIgnoredNot", "form" }, method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByIgnoredNotForm(Model uiModel) {
        return "containerstates/findContainerStatesByIgnoredNot";
    }
    
    @RequestMapping(params = "find=ByIgnoredNot", method = RequestMethod.GET)
    public String ContainerStateController.findContainerStatesByIgnoredNot(@RequestParam(value = "ignored", required = false) boolean ignored, Model uiModel) {
        uiModel.addAttribute("containerstates", ContainerState.findContainerStatesByIgnoredNot(ignored).getResultList());
        return "containerstates/list";
    }
    
}
