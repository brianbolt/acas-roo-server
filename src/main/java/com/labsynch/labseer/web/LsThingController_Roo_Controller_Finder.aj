// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.LsThing;
import com.labsynch.labseer.web.LsThingController;
import java.util.Date;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect LsThingController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCodeNameEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByCodeNameEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByCodeNameEquals";
    }
    
    @RequestMapping(params = "find=ByCodeNameEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByCodeNameEquals(@RequestParam("codeName") String codeName, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByCodeNameEquals(codeName).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByCodeNameLike", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByCodeNameLikeForm(Model uiModel) {
        return "lsthings/findLsThingsByCodeNameLike";
    }
    
    @RequestMapping(params = "find=ByCodeNameLike", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByCodeNameLike(@RequestParam("codeName") String codeName, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByCodeNameLike(codeName).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsKindEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsKindEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByLsKindEquals";
    }
    
    @RequestMapping(params = "find=ByLsKindEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsKindEquals(@RequestParam("lsKind") String lsKind, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsKindEquals(lsKind).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsKindLike", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsKindLikeForm(Model uiModel) {
        return "lsthings/findLsThingsByLsKindLike";
    }
    
    @RequestMapping(params = "find=ByLsKindLike", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsKindLike(@RequestParam("lsKind") String lsKind, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsKindLike(lsKind).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsTransactionEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTransactionEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByLsTransactionEquals";
    }
    
    @RequestMapping(params = "find=ByLsTransactionEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTransactionEquals(@RequestParam("lsTransaction") Long lsTransaction, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsTransactionEquals(lsTransaction).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsTypeAndKindEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeAndKindEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByLsTypeAndKindEquals";
    }
    
    @RequestMapping(params = "find=ByLsTypeAndKindEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeAndKindEquals(@RequestParam("lsTypeAndKind") String lsTypeAndKind, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsTypeAndKindEquals(lsTypeAndKind).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsTypeEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByLsTypeEquals";
    }
    
    @RequestMapping(params = "find=ByLsTypeEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeEquals(@RequestParam("lsType") String lsType, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsTypeEquals(lsType).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByLsTypeEqualsAndLsKindEquals", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeEqualsAndLsKindEqualsForm(Model uiModel) {
        return "lsthings/findLsThingsByLsTypeEqualsAndLsKindEquals";
    }
    
    @RequestMapping(params = "find=ByLsTypeEqualsAndLsKindEquals", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByLsTypeEqualsAndLsKindEquals(@RequestParam("lsType") String lsType, @RequestParam("lsKind") String lsKind, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByLsTypeEqualsAndLsKindEquals(lsType, lsKind).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByRecordedByLike", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedByLikeForm(Model uiModel) {
        return "lsthings/findLsThingsByRecordedByLike";
    }
    
    @RequestMapping(params = "find=ByRecordedByLike", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedByLike(@RequestParam("recordedBy") String recordedBy, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByRecordedByLike(recordedBy).getResultList());
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByRecordedDateGreaterThan", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedDateGreaterThanForm(Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        return "lsthings/findLsThingsByRecordedDateGreaterThan";
    }
    
    @RequestMapping(params = "find=ByRecordedDateGreaterThan", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedDateGreaterThan(@RequestParam("recordedDate") @DateTimeFormat(style = "MM") Date recordedDate, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByRecordedDateGreaterThan(recordedDate).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "lsthings/list";
    }
    
    @RequestMapping(params = { "find=ByRecordedDateLessThan", "form" }, method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedDateLessThanForm(Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        return "lsthings/findLsThingsByRecordedDateLessThan";
    }
    
    @RequestMapping(params = "find=ByRecordedDateLessThan", method = RequestMethod.GET)
    public String LsThingController.findLsThingsByRecordedDateLessThan(@RequestParam("recordedDate") @DateTimeFormat(style = "MM") Date recordedDate, Model uiModel) {
        uiModel.addAttribute("lsthings", LsThing.findLsThingsByRecordedDateLessThan(recordedDate).getResultList());
        addDateTimeFormatPatterns(uiModel);
        return "lsthings/list";
    }
    
}
