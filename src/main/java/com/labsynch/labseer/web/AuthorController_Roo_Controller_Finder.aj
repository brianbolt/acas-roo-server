// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.Author;
import com.labsynch.labseer.web.AuthorController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect AuthorController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByActivationKeyAndEmailAddress", "form" }, method = RequestMethod.GET)
    public String AuthorController.findAuthorsByActivationKeyAndEmailAddressForm(Model uiModel) {
        return "authors/findAuthorsByActivationKeyAndEmailAddress";
    }
    
    @RequestMapping(params = "find=ByActivationKeyAndEmailAddress", method = RequestMethod.GET)
    public String AuthorController.findAuthorsByActivationKeyAndEmailAddress(@RequestParam("activationKey") String activationKey, @RequestParam("emailAddress") String emailAddress, Model uiModel) {
        uiModel.addAttribute("authors", Author.findAuthorsByActivationKeyAndEmailAddress(activationKey, emailAddress).getResultList());
        return "authors/list";
    }
    
    @RequestMapping(params = { "find=ByEmailAddress", "form" }, method = RequestMethod.GET)
    public String AuthorController.findAuthorsByEmailAddressForm(Model uiModel) {
        return "authors/findAuthorsByEmailAddress";
    }
    
    @RequestMapping(params = "find=ByEmailAddress", method = RequestMethod.GET)
    public String AuthorController.findAuthorsByEmailAddress(@RequestParam("emailAddress") String emailAddress, Model uiModel) {
        uiModel.addAttribute("authors", Author.findAuthorsByEmailAddress(emailAddress).getResultList());
        return "authors/list";
    }
    
    @RequestMapping(params = { "find=ByUserName", "form" }, method = RequestMethod.GET)
    public String AuthorController.findAuthorsByUserNameForm(Model uiModel) {
        return "authors/findAuthorsByUserName";
    }
    
    @RequestMapping(params = "find=ByUserName", method = RequestMethod.GET)
    public String AuthorController.findAuthorsByUserName(@RequestParam("userName") String userName, Model uiModel) {
        uiModel.addAttribute("authors", Author.findAuthorsByUserName(userName).getResultList());
        return "authors/list";
    }
    
}
