// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.Container;
import com.labsynch.labseer.domain.ItxSubjectContainer;
import com.labsynch.labseer.domain.Subject;
import com.labsynch.labseer.web.ItxSubjectContainerController;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect ItxSubjectContainerController_Roo_Controller_Json {
    
    @RequestMapping(params = "find=ByCodeNameEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> ItxSubjectContainerController.jsonFindItxSubjectContainersByCodeNameEquals(@RequestParam("codeName") String codeName) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(ItxSubjectContainer.toJsonArray(ItxSubjectContainer.findItxSubjectContainersByCodeNameEquals(codeName).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByContainer", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> ItxSubjectContainerController.jsonFindItxSubjectContainersByContainer(@RequestParam("container") Container container) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(ItxSubjectContainer.toJsonArray(ItxSubjectContainer.findItxSubjectContainersByContainer(container).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByLsTransactionEquals", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> ItxSubjectContainerController.jsonFindItxSubjectContainersByLsTransactionEquals(@RequestParam("lsTransaction") Long lsTransaction) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(ItxSubjectContainer.toJsonArray(ItxSubjectContainer.findItxSubjectContainersByLsTransactionEquals(lsTransaction).getResultList()), headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=BySubject", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> ItxSubjectContainerController.jsonFindItxSubjectContainersBySubject(@RequestParam("subject") Subject subject) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(ItxSubjectContainer.toJsonArray(ItxSubjectContainer.findItxSubjectContainersBySubject(subject).getResultList()), headers, HttpStatus.OK);
    }
    
}
