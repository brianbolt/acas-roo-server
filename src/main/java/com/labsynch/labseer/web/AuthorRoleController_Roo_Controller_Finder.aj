// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.Author;
import com.labsynch.labseer.domain.AuthorRole;
import com.labsynch.labseer.domain.LsRole;
import com.labsynch.labseer.web.AuthorRoleController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect AuthorRoleController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByRoleEntry", "form" }, method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByRoleEntryForm(Model uiModel) {
        uiModel.addAttribute("lsroles", LsRole.findAllLsRoles());
        return "authorroles/findAuthorRolesByRoleEntry";
    }
    
    @RequestMapping(params = "find=ByRoleEntry", method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByRoleEntry(@RequestParam("roleEntry") LsRole roleEntry, Model uiModel) {
        uiModel.addAttribute("authorroles", AuthorRole.findAuthorRolesByRoleEntry(roleEntry).getResultList());
        return "authorroles/list";
    }
    
    @RequestMapping(params = { "find=ByRoleEntryAndUserEntry", "form" }, method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByRoleEntryAndUserEntryForm(Model uiModel) {
        uiModel.addAttribute("lsroles", LsRole.findAllLsRoles());
        uiModel.addAttribute("authors", Author.findAllAuthors());
        return "authorroles/findAuthorRolesByRoleEntryAndUserEntry";
    }
    
    @RequestMapping(params = "find=ByRoleEntryAndUserEntry", method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByRoleEntryAndUserEntry(@RequestParam("roleEntry") LsRole roleEntry, @RequestParam("userEntry") Author userEntry, Model uiModel) {
        uiModel.addAttribute("authorroles", AuthorRole.findAuthorRolesByRoleEntryAndUserEntry(roleEntry, userEntry).getResultList());
        return "authorroles/list";
    }
    
    @RequestMapping(params = { "find=ByUserEntry", "form" }, method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByUserEntryForm(Model uiModel) {
        uiModel.addAttribute("authors", Author.findAllAuthors());
        return "authorroles/findAuthorRolesByUserEntry";
    }
    
    @RequestMapping(params = "find=ByUserEntry", method = RequestMethod.GET)
    public String AuthorRoleController.findAuthorRolesByUserEntry(@RequestParam("userEntry") Author userEntry, Model uiModel) {
        uiModel.addAttribute("authorroles", AuthorRole.findAuthorRolesByUserEntry(userEntry).getResultList());
        return "authorroles/list";
    }
    
}
