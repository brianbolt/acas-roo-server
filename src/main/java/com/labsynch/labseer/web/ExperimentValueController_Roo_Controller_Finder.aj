// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.ExperimentState;
import com.labsynch.labseer.domain.ExperimentValue;
import com.labsynch.labseer.web.ExperimentValueController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ExperimentValueController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByLsKindEqualsAndCodeValueLike", "form" }, method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsKindEqualsAndCodeValueLikeForm(Model uiModel) {
        return "experimentvalues/findExperimentValuesByLsKindEqualsAndCodeValueLike";
    }
    
    @RequestMapping(params = "find=ByLsKindEqualsAndCodeValueLike", method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsKindEqualsAndCodeValueLike(@RequestParam("lsKind") String lsKind, @RequestParam("codeValue") String codeValue, Model uiModel) {
        uiModel.addAttribute("experimentvalues", ExperimentValue.findExperimentValuesByLsKindEqualsAndCodeValueLike(lsKind, codeValue).getResultList());
        return "experimentvalues/list";
    }
    
    @RequestMapping(params = { "find=ByLsKindEqualsAndStringValueLike", "form" }, method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsKindEqualsAndStringValueLikeForm(Model uiModel) {
        return "experimentvalues/findExperimentValuesByLsKindEqualsAndStringValueLike";
    }
    
    @RequestMapping(params = "find=ByLsKindEqualsAndStringValueLike", method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsKindEqualsAndStringValueLike(@RequestParam("lsKind") String lsKind, @RequestParam("stringValue") String stringValue, Model uiModel) {
        uiModel.addAttribute("experimentvalues", ExperimentValue.findExperimentValuesByLsKindEqualsAndStringValueLike(lsKind, stringValue).getResultList());
        return "experimentvalues/list";
    }
    
    @RequestMapping(params = { "find=ByLsState", "form" }, method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsStateForm(Model uiModel) {
        uiModel.addAttribute("experimentstates", ExperimentState.findAllExperimentStates());
        return "experimentvalues/findExperimentValuesByLsState";
    }
    
    @RequestMapping(params = "find=ByLsState", method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsState(@RequestParam("lsState") ExperimentState lsState, Model uiModel) {
        uiModel.addAttribute("experimentvalues", ExperimentValue.findExperimentValuesByLsState(lsState).getResultList());
        return "experimentvalues/list";
    }
    
    @RequestMapping(params = { "find=ByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEquals", "form" }, method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEqualsForm(Model uiModel) {
        uiModel.addAttribute("experimentstates", ExperimentState.findAllExperimentStates());
        return "experimentvalues/findExperimentValuesByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEquals";
    }
    
    @RequestMapping(params = "find=ByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEquals", method = RequestMethod.GET)
    public String ExperimentValueController.findExperimentValuesByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEquals(@RequestParam("lsState") ExperimentState lsState, @RequestParam(value = "ignored", required = false) boolean ignored, @RequestParam("lsKind") String lsKind, @RequestParam("lsType") String lsType, @RequestParam("stringValue") String stringValue, Model uiModel) {
        uiModel.addAttribute("experimentvalues", ExperimentValue.findExperimentValuesByLsStateAndIgnoredNotAndLsKindEqualsAndLsTypeEqualsAndStringValueEquals(lsState, ignored, lsKind, lsType, stringValue).getResultList());
        return "experimentvalues/list";
    }
    
}
