// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.TreatmentGroupState;
import com.labsynch.labseer.domain.TreatmentGroupValue;
import com.labsynch.labseer.web.TreatmentGroupValueController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect TreatmentGroupValueController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCodeValueEquals", "form" }, method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByCodeValueEqualsForm(Model uiModel) {
        return "treatmentgroupvalues/findTreatmentGroupValuesByCodeValueEquals";
    }
    
    @RequestMapping(params = "find=ByCodeValueEquals", method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByCodeValueEquals(@RequestParam("codeValue") String codeValue, Model uiModel) {
        uiModel.addAttribute("treatmentgroupvalues", TreatmentGroupValue.findTreatmentGroupValuesByCodeValueEquals(codeValue).getResultList());
        return "treatmentgroupvalues/list";
    }
    
    @RequestMapping(params = { "find=ByIgnoredNotAndCodeValueEquals", "form" }, method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByIgnoredNotAndCodeValueEqualsForm(Model uiModel) {
        return "treatmentgroupvalues/findTreatmentGroupValuesByIgnoredNotAndCodeValueEquals";
    }
    
    @RequestMapping(params = "find=ByIgnoredNotAndCodeValueEquals", method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByIgnoredNotAndCodeValueEquals(@RequestParam(value = "ignored", required = false) boolean ignored, @RequestParam("codeValue") String codeValue, Model uiModel) {
        uiModel.addAttribute("treatmentgroupvalues", TreatmentGroupValue.findTreatmentGroupValuesByIgnoredNotAndCodeValueEquals(ignored, codeValue).getResultList());
        return "treatmentgroupvalues/list";
    }
    
    @RequestMapping(params = { "find=ByLsState", "form" }, method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByLsStateForm(Model uiModel) {
        uiModel.addAttribute("treatmentgroupstates", TreatmentGroupState.findAllTreatmentGroupStates());
        return "treatmentgroupvalues/findTreatmentGroupValuesByLsState";
    }
    
    @RequestMapping(params = "find=ByLsState", method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByLsState(@RequestParam("lsState") TreatmentGroupState lsState, Model uiModel) {
        uiModel.addAttribute("treatmentgroupvalues", TreatmentGroupValue.findTreatmentGroupValuesByLsState(lsState).getResultList());
        return "treatmentgroupvalues/list";
    }
    
    @RequestMapping(params = { "find=ByLsTransactionEquals", "form" }, method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByLsTransactionEqualsForm(Model uiModel) {
        return "treatmentgroupvalues/findTreatmentGroupValuesByLsTransactionEquals";
    }
    
    @RequestMapping(params = "find=ByLsTransactionEquals", method = RequestMethod.GET)
    public String TreatmentGroupValueController.findTreatmentGroupValuesByLsTransactionEquals(@RequestParam("lsTransaction") Long lsTransaction, Model uiModel) {
        uiModel.addAttribute("treatmentgroupvalues", TreatmentGroupValue.findTreatmentGroupValuesByLsTransactionEquals(lsTransaction).getResultList());
        return "treatmentgroupvalues/list";
    }
    
}
