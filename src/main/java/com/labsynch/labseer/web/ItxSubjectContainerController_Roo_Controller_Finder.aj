// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.web;

import com.labsynch.labseer.domain.Container;
import com.labsynch.labseer.domain.ItxSubjectContainer;
import com.labsynch.labseer.domain.Subject;
import com.labsynch.labseer.web.ItxSubjectContainerController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ItxSubjectContainerController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByCodeNameEquals", "form" }, method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByCodeNameEqualsForm(Model uiModel) {
        return "itxsubjectcontainers/findItxSubjectContainersByCodeNameEquals";
    }
    
    @RequestMapping(params = "find=ByCodeNameEquals", method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByCodeNameEquals(@RequestParam("codeName") String codeName, Model uiModel) {
        uiModel.addAttribute("itxsubjectcontainers", ItxSubjectContainer.findItxSubjectContainersByCodeNameEquals(codeName).getResultList());
        return "itxsubjectcontainers/list";
    }
    
    @RequestMapping(params = { "find=ByContainer", "form" }, method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByContainerForm(Model uiModel) {
        uiModel.addAttribute("containers", Container.findAllContainers());
        return "itxsubjectcontainers/findItxSubjectContainersByContainer";
    }
    
    @RequestMapping(params = "find=ByContainer", method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByContainer(@RequestParam("container") Container container, Model uiModel) {
        uiModel.addAttribute("itxsubjectcontainers", ItxSubjectContainer.findItxSubjectContainersByContainer(container).getResultList());
        return "itxsubjectcontainers/list";
    }
    
    @RequestMapping(params = { "find=ByLsTransactionEquals", "form" }, method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByLsTransactionEqualsForm(Model uiModel) {
        return "itxsubjectcontainers/findItxSubjectContainersByLsTransactionEquals";
    }
    
    @RequestMapping(params = "find=ByLsTransactionEquals", method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersByLsTransactionEquals(@RequestParam("lsTransaction") Long lsTransaction, Model uiModel) {
        uiModel.addAttribute("itxsubjectcontainers", ItxSubjectContainer.findItxSubjectContainersByLsTransactionEquals(lsTransaction).getResultList());
        return "itxsubjectcontainers/list";
    }
    
    @RequestMapping(params = { "find=BySubject", "form" }, method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersBySubjectForm(Model uiModel) {
        uiModel.addAttribute("subjects", Subject.findAllSubjects());
        return "itxsubjectcontainers/findItxSubjectContainersBySubject";
    }
    
    @RequestMapping(params = "find=BySubject", method = RequestMethod.GET)
    public String ItxSubjectContainerController.findItxSubjectContainersBySubject(@RequestParam("subject") Subject subject, Model uiModel) {
        uiModel.addAttribute("itxsubjectcontainers", ItxSubjectContainer.findItxSubjectContainersBySubject(subject).getResultList());
        return "itxsubjectcontainers/list";
    }
    
}
