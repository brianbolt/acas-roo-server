// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.AnalysisGroup;
import com.labsynch.labseer.domain.AnalysisGroupLabel;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect AnalysisGroupLabel_Roo_Finder {
    
    public static TypedQuery<AnalysisGroupLabel> AnalysisGroupLabel.findAnalysisGroupLabelsByAnalysisGroup(AnalysisGroup analysisGroup) {
        if (analysisGroup == null) throw new IllegalArgumentException("The analysisGroup argument is required");
        EntityManager em = AnalysisGroupLabel.entityManager();
        TypedQuery<AnalysisGroupLabel> q = em.createQuery("SELECT o FROM AnalysisGroupLabel AS o WHERE o.analysisGroup = :analysisGroup", AnalysisGroupLabel.class);
        q.setParameter("analysisGroup", analysisGroup);
        return q;
    }
    
    public static TypedQuery<AnalysisGroupLabel> AnalysisGroupLabel.findAnalysisGroupLabelsByLsTransactionEquals(Long lsTransaction) {
        if (lsTransaction == null) throw new IllegalArgumentException("The lsTransaction argument is required");
        EntityManager em = AnalysisGroupLabel.entityManager();
        TypedQuery<AnalysisGroupLabel> q = em.createQuery("SELECT o FROM AnalysisGroupLabel AS o WHERE o.lsTransaction = :lsTransaction", AnalysisGroupLabel.class);
        q.setParameter("lsTransaction", lsTransaction);
        return q;
    }
    
}
