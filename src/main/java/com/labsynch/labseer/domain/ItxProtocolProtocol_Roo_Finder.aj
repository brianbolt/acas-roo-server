// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.ItxProtocolProtocol;
import com.labsynch.labseer.domain.Protocol;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ItxProtocolProtocol_Roo_Finder {
    
    public static TypedQuery<ItxProtocolProtocol> ItxProtocolProtocol.findItxProtocolProtocolsByFirstProtocol(Protocol firstProtocol) {
        if (firstProtocol == null) throw new IllegalArgumentException("The firstProtocol argument is required");
        EntityManager em = ItxProtocolProtocol.entityManager();
        TypedQuery<ItxProtocolProtocol> q = em.createQuery("SELECT o FROM ItxProtocolProtocol AS o WHERE o.firstProtocol = :firstProtocol", ItxProtocolProtocol.class);
        q.setParameter("firstProtocol", firstProtocol);
        return q;
    }
    
    public static TypedQuery<ItxProtocolProtocol> ItxProtocolProtocol.findItxProtocolProtocolsByLsTransactionEquals(Long lsTransaction) {
        if (lsTransaction == null) throw new IllegalArgumentException("The lsTransaction argument is required");
        EntityManager em = ItxProtocolProtocol.entityManager();
        TypedQuery<ItxProtocolProtocol> q = em.createQuery("SELECT o FROM ItxProtocolProtocol AS o WHERE o.lsTransaction = :lsTransaction", ItxProtocolProtocol.class);
        q.setParameter("lsTransaction", lsTransaction);
        return q;
    }
    
    public static TypedQuery<ItxProtocolProtocol> ItxProtocolProtocol.findItxProtocolProtocolsBySecondProtocol(Protocol secondProtocol) {
        if (secondProtocol == null) throw new IllegalArgumentException("The secondProtocol argument is required");
        EntityManager em = ItxProtocolProtocol.entityManager();
        TypedQuery<ItxProtocolProtocol> q = em.createQuery("SELECT o FROM ItxProtocolProtocol AS o WHERE o.secondProtocol = :secondProtocol", ItxProtocolProtocol.class);
        q.setParameter("secondProtocol", secondProtocol);
        return q;
    }
    
}
