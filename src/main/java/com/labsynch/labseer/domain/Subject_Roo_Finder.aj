// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.Subject;
import com.labsynch.labseer.domain.TreatmentGroup;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Subject_Roo_Finder {
    
    public static TypedQuery<Subject> Subject.findSubjectsByCodeNameEquals(String codeName) {
        if (codeName == null || codeName.length() == 0) throw new IllegalArgumentException("The codeName argument is required");
        EntityManager em = Subject.entityManager();
        TypedQuery<Subject> q = em.createQuery("SELECT o FROM Subject AS o WHERE o.codeName = :codeName", Subject.class);
        q.setParameter("codeName", codeName);
        return q;
    }
    
    public static TypedQuery<Subject> Subject.findSubjectsByLsTransactionEquals(Long lsTransaction) {
        if (lsTransaction == null) throw new IllegalArgumentException("The lsTransaction argument is required");
        EntityManager em = Subject.entityManager();
        TypedQuery<Subject> q = em.createQuery("SELECT o FROM Subject AS o WHERE o.lsTransaction = :lsTransaction", Subject.class);
        q.setParameter("lsTransaction", lsTransaction);
        return q;
    }
    
    public static TypedQuery<Subject> Subject.findSubjectsByTreatmentGroup(TreatmentGroup treatmentGroup) {
        if (treatmentGroup == null) throw new IllegalArgumentException("The treatmentGroup argument is required");
        EntityManager em = Subject.entityManager();
        TypedQuery<Subject> q = em.createQuery("SELECT o FROM Subject AS o WHERE o.treatmentGroup = :treatmentGroup", Subject.class);
        q.setParameter("treatmentGroup", treatmentGroup);
        return q;
    }
    
}
