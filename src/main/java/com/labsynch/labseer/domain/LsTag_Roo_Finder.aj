// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.LsTag;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect LsTag_Roo_Finder {
    
    public static TypedQuery<LsTag> LsTag.findLsTagsByTagTextEquals(String tagText) {
        if (tagText == null || tagText.length() == 0) throw new IllegalArgumentException("The tagText argument is required");
        EntityManager em = LsTag.entityManager();
        TypedQuery<LsTag> q = em.createQuery("SELECT o FROM LsTag AS o WHERE o.tagText = :tagText", LsTag.class);
        q.setParameter("tagText", tagText);
        return q;
    }
    
    public static TypedQuery<LsTag> LsTag.findLsTagsByTagTextLike(String tagText) {
        if (tagText == null || tagText.length() == 0) throw new IllegalArgumentException("The tagText argument is required");
        tagText = tagText.replace('*', '%');
        if (tagText.charAt(0) != '%') {
            tagText = "%" + tagText;
        }
        if (tagText.charAt(tagText.length() - 1) != '%') {
            tagText = tagText + "%";
        }
        EntityManager em = LsTag.entityManager();
        TypedQuery<LsTag> q = em.createQuery("SELECT o FROM LsTag AS o WHERE LOWER(o.tagText) LIKE LOWER(:tagText)", LsTag.class);
        q.setParameter("tagText", tagText);
        return q;
    }
    
}
