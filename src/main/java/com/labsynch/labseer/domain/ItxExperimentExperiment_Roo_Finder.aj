// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.Experiment;
import com.labsynch.labseer.domain.ItxExperimentExperiment;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ItxExperimentExperiment_Roo_Finder {
    
    public static TypedQuery<ItxExperimentExperiment> ItxExperimentExperiment.findItxExperimentExperimentsByFirstExperiment(Experiment firstExperiment) {
        if (firstExperiment == null) throw new IllegalArgumentException("The firstExperiment argument is required");
        EntityManager em = ItxExperimentExperiment.entityManager();
        TypedQuery<ItxExperimentExperiment> q = em.createQuery("SELECT o FROM ItxExperimentExperiment AS o WHERE o.firstExperiment = :firstExperiment", ItxExperimentExperiment.class);
        q.setParameter("firstExperiment", firstExperiment);
        return q;
    }
    
    public static TypedQuery<ItxExperimentExperiment> ItxExperimentExperiment.findItxExperimentExperimentsByLsTransactionEquals(Long lsTransaction) {
        if (lsTransaction == null) throw new IllegalArgumentException("The lsTransaction argument is required");
        EntityManager em = ItxExperimentExperiment.entityManager();
        TypedQuery<ItxExperimentExperiment> q = em.createQuery("SELECT o FROM ItxExperimentExperiment AS o WHERE o.lsTransaction = :lsTransaction", ItxExperimentExperiment.class);
        q.setParameter("lsTransaction", lsTransaction);
        return q;
    }
    
    public static TypedQuery<ItxExperimentExperiment> ItxExperimentExperiment.findItxExperimentExperimentsBySecondExperiment(Experiment secondExperiment) {
        if (secondExperiment == null) throw new IllegalArgumentException("The secondExperiment argument is required");
        EntityManager em = ItxExperimentExperiment.entityManager();
        TypedQuery<ItxExperimentExperiment> q = em.createQuery("SELECT o FROM ItxExperimentExperiment AS o WHERE o.secondExperiment = :secondExperiment", ItxExperimentExperiment.class);
        q.setParameter("secondExperiment", secondExperiment);
        return q;
    }
    
}
