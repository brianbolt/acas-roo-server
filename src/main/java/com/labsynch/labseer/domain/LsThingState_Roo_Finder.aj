// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.LsThing;
import com.labsynch.labseer.domain.LsThingState;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect LsThingState_Roo_Finder {
    
    public static TypedQuery<LsThingState> LsThingState.findLsThingStatesByLsThing(LsThing lsThing) {
        if (lsThing == null) throw new IllegalArgumentException("The lsThing argument is required");
        EntityManager em = LsThingState.entityManager();
        TypedQuery<LsThingState> q = em.createQuery("SELECT o FROM LsThingState AS o WHERE o.lsThing = :lsThing", LsThingState.class);
        q.setParameter("lsThing", lsThing);
        return q;
    }
    
    public static TypedQuery<LsThingState> LsThingState.findLsThingStatesByLsTransactionEquals(Long lsTransaction) {
        if (lsTransaction == null) throw new IllegalArgumentException("The lsTransaction argument is required");
        EntityManager em = LsThingState.entityManager();
        TypedQuery<LsThingState> q = em.createQuery("SELECT o FROM LsThingState AS o WHERE o.lsTransaction = :lsTransaction", LsThingState.class);
        q.setParameter("lsTransaction", lsTransaction);
        return q;
    }
    
}
