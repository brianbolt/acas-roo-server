DO $$ 
DECLARE
	m   varchar[];
	arr varchar[] := array[
['ANALYSIS_GROUP', 'ANALYSIS_GROUP_DLTD_IDX'],
['ANALYSIS_GROUP_LABEL', 'ANALYSIS_GROUP_LABEL_DLTD_IDX'],
['ANALYSIS_GROUP_STATE', 'ANALYSIS_GROUP_STATE_DLTD_IDX'],
['ANALYSIS_GROUP_VALUE', 'ANALYSIS_GROUP_VALUE_DLTD_IDX'],
['CONTAINER', 'CONTAINER_DLTD_IDX'],
['CONTAINER_LABEL', 'CNTRLBL_DLTD_IDX'],
['CONTAINER_STATE', 'CNTRST_DLTD_IDX'],
['CONTAINER_VALUE', 'CNTRVL_DLTD_IDX'],
['EXPERIMENT', 'EXPERIMENT_DLTD_IDX'],
['EXPERIMENT_LABEL', 'EXPERIMENT_LABEL_DLTD_IDX'],
['EXPERIMENT_STATE', 'EXPERIMENT_STATE_DLTD_IDX'],
['EXPERIMENT_VALUE', 'EXPERIMENT_VALUE_DLTD_IDX'],
['FILE_THING', 'FILE_THING_DLTD_IDX'],
['ITX_CONTAINER_CONTAINER', 'ITXCNTR_DLTD_IDX'],
['ITX_CONTAINER_CONTAINER_STATE', 'ITXCNTRST_DLTD_IDX'],
['ITX_CONTAINER_CONTAINER_VALUE', 'ITXCNTRVL_DLTD_IDX'],
['ITX_EXPT_EXPT', 'ITX_EXPT_EXP_DLTD_IDX'],
['ITX_EXPT_EXPT_STATE', 'ITX_EXPT_EXPT_STATE_DLTD_IDX'],
['ITX_EXPT_EXPT_VALUE', 'ITX_EXPT_EXPT_VALUE_DLTD_IDX'],
['ITX_LS_THING_LS_THING', 'ITX_LS_THING_LS_THNG_DLTD_IDX'],
['ITX_LS_THING_LS_THING_STATE', 'ITX_THNG_THNG_STATE_DLTD_IDX'],
['ITX_LS_THING_LS_THING_VALUE', 'ITX_THNG_THNG_VAL_DLTD_IDX'],
['ITX_PROTOCOL_PROTOCOL', 'ITX_PROTOCOL_PROTOCO_DLTD_IDX'],
['ITX_PROTOCOL_PROTOCOL_STATE', 'ITX_PRCL_PRCL_STATE_DLTD_IDX'],
['ITX_PROTOCOL_PROTOCOL_VALUE', 'ITX_PRCL_PRCL_VALUE_DLTD_IDX'],
['ITX_SUBJECT_CONTAINER', 'ITXSUBJCNTR_DLTD_IDX'],
['ITX_SUBJECT_CONTAINER_STATE', 'ITXSBCNTRST_DLTD_IDX'],
['ITX_SUBJECT_CONTAINER_VALUE', 'ITXSBCNTRVL_DLTD_IDX'],
['LS_INTERACTION', 'LS_INTERACTION_DLTD_IDX'],
['LS_THING', 'LS_THING_DLTD_IDX'],
['LS_THING_LABEL', 'LS_THING_LABEL_DLTD_IDX'],
['LS_THING_STATE', 'LS_THING_STATE_DLTD_IDX'],
['LS_THING_VALUE', 'LS_THING_VALUE_DLTD_IDX'],
['PROTOCOL', 'PROTOCO_DLTD_IDX'],
['PROTOCOL_LABEL', 'PROTLBL_DLTD_IDX'],
['PROTOCOL_STATE', 'PROTOCOL_DLTD_IDX'],
['PROTOCOL_VALUE', 'PROTOCOL_VALUE_DLTD_IDX'],
['SUBJECT', 'SUBJECT_DLTD_IDX'],
['SUBJECT_LABEL', 'SBJLBL_DLTD_IDX'],
['SUBJECT_STATE', 'SBJST_DLTD_IDX'],
['SUBJECT_VALUE', 'SBJVL_DLTD_IDX'],
['TREATMENT_GROUP', 'TREATMENT_GRP_DLTD_IDX'],
['TREATMENT_GROUP_LABEL', 'TREATMENT_GRP_LABEL_DLTD_IDX'],
['TREATMENT_GROUP_STATE', 'TREATMENT_GRP_STATE_DLTD_IDX'],
['TREATMENT_GROUP_VALUE', 'TREATMENT_GRP_VALUE_DLTD_IDX']];  
BEGIN
  FOREACH m SLICE 1 IN ARRAY arr
LOOP 
   RAISE NOTICE '%', m[2];
   IF EXISTS (
    SELECT 1
    FROM   pg_class c
    JOIN   pg_namespace n ON n.oid = c.relnamespace
    WHERE  lower(c.relname) = lower(m[2])
    AND    n.nspname = CURRENT_SCHEMA
    ) THEN
    RAISE NOTICE 'INDEX EXISTS';
   ELSE
     EXECUTE 'CREATE INDEX ' || m[2] || ' ON ' || m[1] || '("deleted")';
     RAISE NOTICE 'CREATED INDEX';

END IF;
END LOOP;
END $$;